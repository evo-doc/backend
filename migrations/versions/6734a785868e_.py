"""empty message

Revision ID: 6734a785868e
Revises: 
Create Date: 2018-10-22 22:52:09.137536

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6734a785868e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission')),
    sa.UniqueConstraint('name', name=op.f('uq_permission_name'))
    )
    op.create_table('role',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('role_to_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_role_to_permission_permission_id_permission')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_role_to_permission_role_id_role')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_to_permission'))
    )
    op.create_table('user',
    sa.Column('delete', sa.DateTime(), nullable=True),
    sa.Column('create', sa.DateTime(), nullable=True),
    sa.Column('update', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('activated', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_id_role')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('name', name=op.f('uq_user_name'))
    )
    op.create_table('package',
    sa.Column('delete', sa.DateTime(), nullable=True),
    sa.Column('create', sa.DateTime(), nullable=True),
    sa.Column('update', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_package_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_package')),
    sa.UniqueConstraint('name', name=op.f('uq_package_name')),
    sa.UniqueConstraint('url', name=op.f('uq_package_url'))
    )
    op.create_table('project',
    sa.Column('delete', sa.DateTime(), nullable=True),
    sa.Column('create', sa.DateTime(), nullable=True),
    sa.Column('update', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_project_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project'))
    )
    op.create_table('user_token',
    sa.Column('create', sa.DateTime(), nullable=True),
    sa.Column('update', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('previous_token_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_token')),
    sa.UniqueConstraint('token', name=op.f('uq_user_token_token'))
    )
    op.create_table('module',
    sa.Column('delete', sa.DateTime(), nullable=True),
    sa.Column('create', sa.DateTime(), nullable=True),
    sa.Column('update', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_module_owner_id_user')),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_module_project_id_project')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_module'))
    )
    op.create_table('project_to_user',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_project_to_user_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_project_to_user_user_id_user')),
    sa.PrimaryKeyConstraint('project_id', 'user_id', name=op.f('pk_project_to_user'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_to_user')
    op.drop_table('module')
    op.drop_table('user_token')
    op.drop_table('project')
    op.drop_table('package')
    op.drop_table('user')
    op.drop_table('role_to_permission')
    op.drop_table('role')
    op.drop_table('permission')
    # ### end Alembic commands ###
